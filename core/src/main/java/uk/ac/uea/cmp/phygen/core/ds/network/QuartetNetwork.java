/*
 * Phylogenetics Tool suite
 * Copyright (C) 2013  UEA CMP Phylogenetics Group
 *
 * This program is free software: you can redistribute it and/or modify it under the term of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any
 * later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with this program.  If not, see
 * <http://www.gnu.org/licenses/>.
 */

package uk.ac.uea.cmp.phygen.core.ds.network;

import uk.ac.uea.cmp.phygen.core.ds.Taxa;
import uk.ac.uea.cmp.phygen.core.ds.quartet.Quartet;
import uk.ac.uea.cmp.phygen.core.ds.quartet.QuartetWeights;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.NumberFormat;

/**
 * Created with IntelliJ IDEA.
 * User: dan
 * Date: 18/11/13
 * Time: 22:37
 * To change this template use File | Settings | File Templates.
 */
public class QuartetNetwork {

    private Taxa taxa;
    private double weight;
    private QuartetWeights quartetWeights;

    public QuartetNetwork(Taxa taxa, double weight, QuartetWeights quartetWeights) {
        this.taxa = taxa;
        this.weight = weight;
        this.quartetWeights = quartetWeights;
    }

    public Taxa getTaxa() {
        return taxa;
    }

    public void setTaxa(Taxa taxa) {
        this.taxa = taxa;
    }

    public double getWeight() {
        return weight;
    }

    public void setWeight(double weight) {
        this.weight = weight;
    }

    public QuartetWeights getQuartetWeights() {
        return quartetWeights;
    }

    public void setQuartetWeights(QuartetWeights quartetWeights) {
        this.quartetWeights = quartetWeights;
    }

    public void setTaxaIndecies(Taxa superTaxaSet) {

    }

    public void saveQuartets(File outputFile) throws IOException {

        int N = taxa.size();

        FileWriter out = new FileWriter(outputFile);

        out.write("taxanumber: " + N + ";\ndescription: supernetwork quartets generated by Chopper;\nsense: max;\n");

        NumberFormat nF = NumberFormat.getIntegerInstance();
        nF.setMinimumIntegerDigits(3);
        nF.setMaximumIntegerDigits(3);

        for (int n = 0; n < N; n++) {
            out.write("taxon:   " + nF.format(n + 1) + "   name: " + taxa.get(n).getName() + ";\n");
        }

        for (int a = 1; a <= N - 3; a++) {

            for (int b = a + 1; b <= N - 2; b++) {

                for (int c = b + 1; c <= N - 1; c++) {

                    for (int d = c + 1; d <= N; d++) {

                        out.write("quartet: " + nF.format(a) + " " + nF.format(b) + " " + nF.format(c) + " " + nF.format(d)
                                + " weights: "
                                + quartetWeights.getWeight(new Quartet(a, b, c, d)) + " " + quartetWeights.getWeight(new Quartet(a, c, b, d))
                                + " " + quartetWeights.getWeight(new Quartet(a, d, b, c)) + ";\n");

                    }
                }
            }
        }

        out.close();
    }
}
